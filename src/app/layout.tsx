import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "react-hot-toast";
import { Sidebar } from "./components/sidebar";
import Providers from "./providers";
import { getServerSession } from "next-auth";
import { authOptions } from "@/lib/auth";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
    const session = await getServerSession(authOptions);

return (
  
  <html lang="en">
    <body
      className={`${geistSans.variable} ${geistMono.variable} antialiased`}
    >
      <Providers session={session}>
      <div className="flex min-h-screen">
        <Sidebar />
        {/* Make the main content scrollable independently */}
        <main className="flex-1 md:ml-0 p-4 md:p-6 transition-all duration-300 overflow-auto">
          {children}
        </main>
      </div>
      <Toaster
        position="top-right"
        toastOptions={{
          style: {
            background:
              "linear-gradient(135deg, rgba(59,130,246,0.9), rgba(168,85,247,0.9))",
            color: "#fff",
            border: "1px solid rgba(255, 255, 255, 0.2)",
            borderRadius: "1rem",
            backdropFilter: "blur(12px)",
            boxShadow: "0 4px 20px rgba(0, 0, 0, 0.3)",
            padding: "12px 16px",
            fontWeight: 500,
          },
          success: {
            duration: 3000,
            iconTheme: {
              primary: "#38bdf8",
              secondary: "#fff",
            },
          },
          error: {
            style: {
              background:
                "linear-gradient(135deg, rgba(239,68,68,0.9), rgba(220,38,38,0.9))",
              border: "1px solid rgba(255, 255, 255, 0.2)",
            },
            iconTheme: { primary: "#ef4444", secondary: "#fff" },
          },
          loading: {
            duration: Infinity,
            iconTheme: { primary: "#facc15", secondary: "#fff" },
          },
        }}
      />
      </Providers>
    </body>
  </html>
);
}
